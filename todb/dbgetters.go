// Copyright 2015 Comcast Cable Communications Management, LLC

// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at

// http://www.apache.org/licenses/LICENSE-2.0

// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.

// This file was initially generated by get_structs.go (add link), as a start
// of the Traffic Ops golang data model

package todb

import (
// "fmt"
)

func Action(tableName, method string, id int) (interface{}, error) {
	if tableName == "asn" {
		return handleAsn(method, id)
	}
	if tableName == "cachegroup" {
		return handleCachegroup(method, id)
	}
	if tableName == "cachegroup_parameter" {
		return handleCachegroupParameter(method, id)
	}
	if tableName == "cdn" {
		return handleCdn(method, id)
	}
	if tableName == "deliveryservice" {
		return handleDeliveryservice(method, id)
	}
	if tableName == "deliveryservice_regex" {
		return handleDeliveryserviceRegex(method, id)
	}
	if tableName == "deliveryservice_server" {
		return handleDeliveryserviceServer(method, id)
	}
	if tableName == "deliveryservice_tmuser" {
		return handleDeliveryserviceTmuser(method, id)
	}
	if tableName == "division" {
		return handleDivision(method, id)
	}
	if tableName == "federation" {
		return handleFederation(method, id)
	}
	if tableName == "federation_deliveryservice" {
		return handleFederationDeliveryservice(method, id)
	}
	if tableName == "federation_federation_resolver" {
		return handleFederationFederationResolver(method, id)
	}
	if tableName == "federation_resolver" {
		return handleFederationResolver(method, id)
	}
	if tableName == "federation_tmuser" {
		return handleFederationTmuser(method, id)
	}
	if tableName == "goose_db_version" {
		return handleGooseDbVersion(method, id)
	}
	if tableName == "hwinfo" {
		return handleHwinfo(method, id)
	}
	if tableName == "job" {
		return handleJob(method, id)
	}
	if tableName == "job_agent" {
		return handleJobAgent(method, id)
	}
	if tableName == "job_result" {
		return handleJobResult(method, id)
	}
	if tableName == "job_status" {
		return handleJobStatus(method, id)
	}
	if tableName == "log" {
		return handleLog(method, id)
	}
	if tableName == "parameter" {
		return handleParameter(method, id)
	}
	if tableName == "phys_location" {
		return handlePhysLocation(method, id)
	}
	if tableName == "profile" {
		return handleProfile(method, id)
	}
	if tableName == "profile_parameter" {
		return handleProfileParameter(method, id)
	}
	if tableName == "regex" {
		return handleRegex(method, id)
	}
	if tableName == "region" {
		return handleRegion(method, id)
	}
	if tableName == "role" {
		return handleRole(method, id)
	}
	if tableName == "server" {
		return handleServer(method, id)
	}
	if tableName == "servercheck" {
		return handleServercheck(method, id)
	}
	if tableName == "staticdnsentry" {
		return handleStaticdnsentry(method, id)
	}
	if tableName == "stats_summary" {
		return handleStatsSummary(method, id)
	}
	if tableName == "status" {
		return handleStatus(method, id)
	}
	if tableName == "tm_user" {
		return handleTmUser(method, id)
	}
	if tableName == "to_extension" {
		return handleToExtension(method, id)
	}
	if tableName == "type" {
		return handleType(method, id)
	}
	return nil, nil
}
