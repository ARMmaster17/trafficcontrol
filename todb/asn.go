// Copyright 2015 Comcast Cable Communications Management, LLC

// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at

// http://www.apache.org/licenses/LICENSE-2.0

// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.

// This file was initially generated by gen_goto2.go (add link), as a start
// of the Traffic Ops golang data model

package todb

import (
	"encoding/json"
	"fmt"
	"time"
)

type Asn struct {
	Id          int64     `db:"id" json:"id"`
	Asn         int64     `db:"asn" json:"asn"`
	Cachegroup  int64     `db:"cachegroup" json:"cachegroup"`
	LastUpdated time.Time `db:"last_updated" json:"lastUpdated"`
}

func handleAsn(method string, id int, payload []byte) (interface{}, error) {
	if method == "GET" {
		ret := []Asn{}
		if id >= 0 {
			err := globalDB.Select(&ret, "select * from asn where id=$1", id)
			if err != nil {
				fmt.Println(err)
				return nil, err
			}
		} else {
			queryStr := "select * from asn"
			err := globalDB.Select(&ret, queryStr)
			if err != nil {
				fmt.Println(err)
				return nil, err
			}
		}
		return ret, nil
	} else if method == "POST" {
		var v Asn
		err := json.Unmarshal(payload, &v)
		if err != nil {
			fmt.Println(err)
		}
		insertString := "INSERT INTO asn("
		insertString += "asn"
		insertString += ",cachegroup"
		insertString += ") VALUES ("
		insertString += ":asn"
		insertString += ",:cachegroup"
		insertString += ")"
		result, err := globalDB.NamedExec(insertString, v)
		if err != nil {
			fmt.Println(err)
			return nil, err
		}
		return result.LastInsertId()
	}
	return nil, nil
}
