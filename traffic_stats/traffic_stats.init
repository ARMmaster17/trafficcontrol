#!/bin/bash
#
# Startup script for traffic_stats
#
#
# chkconfig: 345 99 10
# description: traffic_stats control script
# processname: traffic_stats

### BEGIN INIT INFO
# Provides: traffic_stats
# Required-Start:
# Should-Start:
# Required-Stop:
# Default-Start: 3 4 5
# Default-Stop: 0 1 2 6
# Short-Description: Traffic Stats
# Description: Controls all traffic stats processes at once.
### END INIT INFO

STATUS_STOPPED=0
STATUS_RUNNING=1

start()
{
	status
	# check status return code
	if [[ $? -eq $STATUS_STOPPED || "$1" == "force" ]] ; then
		echo "Starting traffic_stats."
		ulimit -n 4096
		/usr/bin/nohup /opt/traffic_stats/bin/traffic_stats --cfg /opt/traffic_stats/conf/traffic_stats.cfg >/opt/traffic_stats/var/log/traffic_stats/traffic_stats.out 2>&1 &
	fi

	return $?
}

stop()
{
	status

	# check status return code
	if [[ $? -eq $STATUS_RUNNING || "$1" == "force" ]] ; then
		echo "Stopping traffic_stats client..."
		kill `pidof -s traffic_stats`

		status

		if [ $? -eq $STATUS_STOPPED ]; then
			echo "traffic_stats killed"
		else
			echo "unable to identify and kill traffic_stats"
		fi
	fi

	return $?
}

reload()
{
	status

	# check status return code
	if [[ $? -eq $STATUS_RUNNING ]] ; then
		echo "Reloading traffic_stats client..."
		kill -HUP `pidof -s traffic_stats`
	else
		echo "traffic_stats not running."
	fi

	return $?
}

status()
{
	pid=`pidof -s traffic_stats`

	if [ -n "$pid" ] ; then
		echo "traffic_stats (pid $pid) is running..."
		return $STATUS_RUNNING
	fi

	echo "traffic_stats is stopped..."
	return $STATUS_STOPPED
}

case "$1" in
	start)
		start
		;;
	stop)
		stop
		;;
	reload)
		reload
		;;
	restart)
		stop "force"
		start "force"
		;;
	status)
		status
		;;
	*)
		echo "Usage: $0 (start|stop|reload|restart|status)"
		exit 1
esac

exit $?
